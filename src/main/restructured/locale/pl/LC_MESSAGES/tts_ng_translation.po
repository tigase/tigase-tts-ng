# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022, Tigase, Inc
# This file is distributed under the same license as the TigaseDoc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TigaseDoc \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-29 01:49-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../Basic_API_Overview.rst:2
msgid "Basic API overview"
msgstr ""

#: ../../Basic_API_Overview.rst:5
msgid "API Overview"
msgstr ""

#: ../../Basic_API_Overview.rst:7
msgid ""
"All test cases should extend ``tigase.tests.AbstractTest`` class, which "
"offers a couple of handy methods that makes writing a test case easier. "
"The most useful and basic are following:"
msgstr ""

#: ../../Basic_API_Overview.rst:9
msgid "handling user/admin account/connection:"
msgstr ""

#: ../../Basic_API_Overview.rst:11
msgid ""
"``createAccount()`` - returns ``AccountBuilder`` allowing adjusting "
"settings of particular user account;"
msgstr ""

#: ../../Basic_API_Overview.rst:13
msgid ""
"``getAdminAccount()`` and ``getJaxmppAdmin()`` - get either ``Account`` "
"object related to admin account or ``Jaxmpp`` object directly."
msgstr ""

#: ../../Basic_API_Overview.rst:15
msgid "``removeUserAccount(Jaxmpp jaxmpp)`` - delete particular user account"
msgstr ""

#: ../../Basic_API_Overview.rst:17
msgid "vhost management:"
msgstr ""

#: ../../Basic_API_Overview.rst:19
msgid "``addVhost(Jaxmpp adminJaxmpp, String prefix)``"
msgstr ""

#: ../../Basic_API_Overview.rst:21
msgid "``removeVhost(Jaxmpp adminJaxmpp, String VHost)``"
msgstr ""

#: ../../Basic_API_Overview.rst:23
msgid "user basic xmpp functionality methods:"
msgstr ""

#: ../../Basic_API_Overview.rst:25
msgid "``changePresenceAndWait(Jaxmpp from, Jaxmpp to, Presence.Show p)``"
msgstr ""

#: ../../Basic_API_Overview.rst:27
msgid "``sendAndFail(Jaxmpp from, Jaxmpp to)``"
msgstr ""

#: ../../Basic_API_Overview.rst:29
msgid "``sendAndWait(Jaxmpp j, IQ iq, AsyncCallback asyncCallback)``"
msgstr ""

#: ../../Basic_API_Overview.rst:31
msgid "``sendAndWait(Jaxmpp from, Jaxmpp to, Message message)``"
msgstr ""

#: ../../Basic_API_Overview.rst:33
msgid "``sendAndWait(Jaxmpp from, Jaxmpp to, String message)``"
msgstr ""

#: ../../Basic_API_Overview.rst:35
msgid "``testSendAndWait(Jaxmpp from, Jaxmpp to)``"
msgstr ""

#: ../../Basic_API_Overview.rst:37
msgid "``testSubscribeAndWait(Jaxmpp from, Jaxmpp to)``"
msgstr ""

#: ../../Basic_API_Overview.rst:39
msgid "utility and configuration"
msgstr ""

#: ../../Basic_API_Overview.rst:41
msgid ""
"``getDomain()`` - returns random domain from the list of available "
"domains from the list of available domains (see :ref:`Test Configuration"
"<test-configuration>`)"
msgstr ""

#: ../../Basic_API_Overview.rst:43
msgid ""
"``getDomain(int i)`` - returns i-th domain from the list of available "
"domains from the list of available domains (see :ref:`Test Configuration"
"<test-configuration>`)"
msgstr ""

#: ../../Basic_API_Overview.rst:45
msgid ""
"``getInstanceHostname()`` - returns random machine hostname from the list"
" of available hostnames from the list of available domains (see "
":ref:`Test Configuration<test-configuration>`)"
msgstr ""

#: ../../Basic_API_Overview.rst:47
msgid ""
"``getInstanceHostnames()`` - returns i-th machine hostname from the list "
"of available hostnames from the list of available domains (see :ref:`Test"
" Configuration<test-configuration>`)"
msgstr ""

#: ../../Basic_API_Overview.rst:49
msgid "``getApiKey()`` - returns configured HTTP-API key"
msgstr ""

#: ../../Basic_API_Overview.rst:51
msgid "``getHttpPort()`` - returns configured HTTP-API port"
msgstr ""

#: ../../Basic_API_Overview.rst:53
msgid ""
"``getBoshURI()`` - returns BOSH URI based on configuration in :ref:`Test "
"Configuration<test-configuration>`"
msgstr ""

#: ../../Basic_API_Overview.rst:55
msgid ""
"``getWebSocketURI()`` - returns WebSocket URI based on configuration in "
":ref:`Test Configuration<test-configuration>`"
msgstr ""

#: ../../Basic_API_Overview.rst:57
msgid "In addition ``tigase.tests.utils.AccountBuilder`` class allows:"
msgstr ""

#: ../../Basic_API_Overview.rst:59
msgid ""
"``setUsername(String username)`` - set username/local part name of "
"particular account"
msgstr ""

#: ../../Basic_API_Overview.rst:61
msgid "``setDomain(String domain)`` - set domain name of particular account"
msgstr ""

#: ../../Basic_API_Overview.rst:63
msgid "``setPassword(String password)`` - set password of particular account"
msgstr ""

#: ../../Basic_API_Overview.rst:65
msgid "``setEmail(String email)`` - set e-mail address of particular account"
msgstr ""

#: ../../Basic_API_Overview.rst:67
msgid ""
"``setLogPrefix(String logPrefix)`` - allows to customize log prefix for "
"log entries for this particular account"
msgstr ""

#: ../../Basic_API_Overview.rst:69
msgid ""
"``setRegister(boolean register)`` - specify whether account should be "
"registered automatically"
msgstr ""

#: ../../Basic_API_Overview.rst:71
msgid ""
"For the purpose of testing delayed response ``tigase.tests.Mutex`` can be"
" used: \\* ``waitFor(long timeout, String…​ items)`` - instruct Mutex to "
"wait for the particular items during configured ``timeout`` \\* "
"``notify(String…​ itemName)`` - upon receiving desired response notify "
"Mutex about it \\* ``isItemNotified(String item)`` - can be used to "
"verify whether particular item was received (useful in asserts)"
msgstr ""

#: ../../Basic_API_Overview.rst:74
msgid "Creating simple test"
msgstr ""

#: ../../Basic_API_Overview.rst:76
msgid ""
"As an example we will use "
"``src/test/java/tigase/tests/ExampleJaxmppTest.java`` test case. "
"Followings steps should be taken:"
msgstr ""

#: ../../Basic_API_Overview.rst:78
msgid "extend ``AbstractTest`` class:"
msgstr ""

#: ../../Basic_API_Overview.rst:84
msgid ""
"create test method and annote it with ``@Test``. In addition specify test"
" group and provide short description"
msgstr ""

#: ../../Basic_API_Overview.rst:91
msgid ""
"create an Account object, configure it, later build Jaxmpp object from it"
" and connect to the server"
msgstr ""

#: ../../Basic_API_Overview.rst:99
msgid "check whether the connection was successful"
msgstr ""

#: ../../Basic_API_Overview.rst:107
msgid "Adding test to suite"
msgstr ""

#: ../../Basic_API_Overview.rst:109
msgid ""
"As described in :ref:`TTS-NF Configuration<TTS-NG_Configuration>`, each "
"test case must be included in Test Suite configuration."
msgstr ""

#: ../../Basic_API_Overview.rst:111
msgid ""
"create new xml file under ``src/test/resources/``, for example "
"``example.xml``"
msgstr ""

#: ../../Basic_API_Overview.rst:113
msgid ""
"in the created xml file add new test case as follows, creating new Suite "
"(specifying name) with a list of tests (specifying names), and each test "
"can contain multiple classes (for details please refer to TestNG "
"documentation)"
msgstr ""

#: ../../Basic_API_Overview.rst:127
msgid ""
"include created xml file in the Test Suite (see :ref:`TTS-NF "
"Configuration<TTS-NG_Configuration>`)"
msgstr ""

#: ../../Configuration.rst:4
msgid "TTS-NG Configuration"
msgstr ""

#: ../../Configuration.rst:9
msgid "Test Configuration"
msgstr ""

#: ../../Configuration.rst:11
msgid ""
"In order to allow connecting to any server that we want to test we need "
"to provide server details and such details are configured in "
"``src/test/resources/server.properties`` file. Through that file it’s "
"possible to configure:"
msgstr ""

#: ../../Configuration.rst:13
msgid "list of configured domains/VHosts (at least one entry is needed):"
msgstr ""

#: ../../Configuration.rst:15
msgid "``server.domains=localhost``"
msgstr ""

#: ../../Configuration.rst:17
msgid ""
"define which domain should be used for Two-way-TLS test (such domain must"
" be configured to use certificate from ``certs/root_ca.pem`` file)"
msgstr ""

#: ../../Configuration.rst:19
msgid "``server.client_auth.domain=a.localhost``"
msgstr ""

#: ../../Configuration.rst:21
msgid ""
"a list of cluster nodes to which test should connect (for single node "
"setup leave only one node; at least one entry is needed)"
msgstr ""

#: ../../Configuration.rst:23
msgid "``server.cluster.nodes=localhost``"
msgstr ""

#: ../../Configuration.rst:25
msgid ""
"details of the admin account (JID will be created from below username and"
" domain name or, if details are not provided, ``admin`` name will be used"
" with first item from ``server.domains``; default password will be the "
"same as used user-name)"
msgstr ""

#: ../../Configuration.rst:33
msgid "HTTP-API component"
msgstr ""

#: ../../Configuration.rst:35
msgid "API key used to access service:"
msgstr ""

#: ../../Configuration.rst:37
msgid "``test.http.api-key=test-api-key``"
msgstr ""

#: ../../Configuration.rst:39
msgid "port under which service is listening:"
msgstr ""

#: ../../Configuration.rst:41
msgid "``test.http.port=8088``"
msgstr ""

#: ../../Configuration.rst:43
msgid ""
"it’s possible to override default ports for WebSocket nad BOSH "
"connections: ``test.ws.port=5290`` and ``test.bosh.port=5280`` "
"respectively."
msgstr ""

#: ../../Configuration.rst:45
msgid ""
"Tigase XMPP Server e-mail monitoring configuration can be set-up using "
"following entries:"
msgstr ""

#: ../../Configuration.rst:54
msgid "Recommended server configuration"
msgstr ""

#: ../../Configuration.rst:56
msgid ""
"In case of running tests against Tigase XMPP Server, there are a couple "
"of required configuration changes (that differ from the default server "
"configuration). Recommended server configuration is located under "
"following location: ``src/test/resources/server/etc/init.properties``. "
"Please refer to the documentation for the explanation of the settings "
"used if in doubt."
msgstr ""

#: ../../Configuration.rst:59
msgid "Test-NG configuration"
msgstr ""

#: ../../Configuration.rst:61
msgid ""
"All tests are grouped in *suites*. All main *suites* are defined in "
"``pom.xml`` file in ``maven-surefire-plugin`` plugin configuration:"
msgstr ""

#: ../../Configuration.rst:75
msgid ""
"For the actual semantics of the suite xml files please refer to Test-NG "
"documentation."
msgstr ""

#: ../../Overview.rst:2
msgid "Welcome to Tigase TTS-NG guide"
msgstr ""

#: ../../Overview.rst:5
msgid "Overview"
msgstr ""

#: ../../Overview.rst:7
msgid ""
"TTS-NG is a NextGeneration version of Tigase TestSuite intended to run "
"automated functionality tests. It’s based on TestNG framework (similar to"
" junit, serving as a basic test framework) and JaXMPP library (to provide"
" client-side functionality)"
msgstr ""

#: ../../Running_TTS-NG.rst:2
msgid "Running TTS-NG"
msgstr ""

#: ../../Running_TTS-NG.rst:5
msgid "Basics"
msgstr ""

#: ../../Running_TTS-NG.rst:7
msgid ""
"As TTS-NG is based on the known framework running the test in the basic "
"form is simply a matter of executing particular test case class(es). The "
"easiest way to do that is to use Maven - you can either run all tests"
msgstr ""

#: ../../Running_TTS-NG.rst:13
msgid "or for particular package/class"
msgstr ""

#: ../../Running_TTS-NG.rst:20
msgid ""
"This will run particular test(s) using server details (details about "
"server configuration are described in :ref:`TTS-NF Configuration<TTS-"
"NG_Configuration>`). It’s possible to override any of the server "
"configuration options from command line by simply appending "
"``-D<property_name>=<property_value>`` to the above options."
msgstr ""

#: ../../Running_TTS-NG.rst:23
msgid "Using test-runner script"
msgstr ""

#: ../../Running_TTS-NG.rst:25
msgid ""
"For the convenience of running automatic tests it’s recommended to use "
"``$ ./scripts/tests-runner.sh`` BASH script, which automates whole "
"process of setting up the server (and database, with correct "
"configuration and components being enabled), running desired tests as "
"well as generating summary page."
msgstr ""

#: ../../Running_TTS-NG.rst:27
msgid ""
"Running it without any parameter will print a help with description of "
"the possible options:"
msgstr ""

#: ../../Running_TTS-NG.rst:56
msgid ""
"Majority of those are self-explanatory. By default, the script will only "
"rebuild all test cases, run them and then generate Summary page and place"
" the output in the ``files`` subdirectory (if not configured otherwise, "
"see :ref:`Test Runner settings<test-runner-settings>`)."
msgstr ""

#: ../../Running_TTS-NG.rst:58
msgid ""
"After ``--all-tests`` and ``--custom <test_case>`` options it’s possible "
"to specify a space-delimited list of databases for which tests should be "
"run (they will match database and server IPs defined in :ref:`Test Runner"
" settings<test-runner-settings>`)."
msgstr ""

#: ../../Running_TTS-NG.rst:60
msgid "By appending following options"
msgstr ""

#: ../../Running_TTS-NG.rst:62
msgid ""
"``-dl`` (or full variant: ``--download-latest``) - you will instruct the "
"script to download latest version of the server and unpack it to ``tmp"
"/tigase-server`` sub directory"
msgstr ""

#: ../../Running_TTS-NG.rst:64
msgid ""
"``-db`` (or full variant: ``--reload-db``) - you will instruct the script"
" to download prepare the configured database (drop it if it exists and "
"load current schema)"
msgstr ""

#: ../../Running_TTS-NG.rst:66
msgid ""
"``-serv`` (or full variant: ``--start-server``) - you will instruct the "
"script start the server from the configured location and utilize "
"recommended settings (located in "
"``src/test/resources/server/etc/init.properties``)"
msgstr ""

#: ../../Running_TTS-NG.rst:71
msgid "Test Runner settings"
msgstr ""

#: ../../Running_TTS-NG.rst:73
msgid ""
"It’s possible to adjust default Test Runner settings by copying "
"distribution settings and adjusting it to your needs:"
msgstr ""

#: ../../Running_TTS-NG.rst:79
msgid "Following configuration options are available:"
msgstr ""

#: ../../Running_TTS-NG.rst:81
msgid "database configuration:"
msgstr ""

#: ../../Running_TTS-NG.rst:83
msgid "``db_name`` - name of the database to be created,"
msgstr ""

#: ../../Running_TTS-NG.rst:85
msgid ""
"``db_user``, ``db_pass`` - name and password of the basic user, which "
"will be used by Tigase,"
msgstr ""

#: ../../Running_TTS-NG.rst:87
msgid ""
"``db_root_user``, ``db_root_pass`` - name and password of the database "
"*root* user, which will be used to create all necessary databases and "
"grant roles."
msgstr ""

#: ../../Running_TTS-NG.rst:89
msgid "databases selection"
msgstr ""

#: ../../Running_TTS-NG.rst:91
msgid ""
"``DATABASES=(\"derby\" \"mysql\" \"postgresql\" \"sqlserver\" "
"\"mongodb\")`` - a list of databases which will be tested"
msgstr ""

#: ../../Running_TTS-NG.rst:93
msgid ""
"``DATABASES_IPS=(\"127.0.0.1\" \"127.0.0.1\" \"127.0.0.1\" "
"\"sqlserverhost\" \"127.0.0.1\")`` - a list of IPs of the databases which"
" will be used while testing particular database, i.e. if you have a list "
"of 3 databases in ``DATABASE`` for each item/index respective item from "
"this array will be used (so for first item ``derby`` from ``DATABASES``, "
"first item from ``DATABASES_IPS`` will be used;"
msgstr ""

#: ../../Running_TTS-NG.rst:95
msgid ""
"``IPS=(\"127.0.0.1\" \"127.0.0.1\" \"127.0.0.1\" \"127.0.0.1\" "
"\"127.0.0.1\")`` - a list of IPs of the servers which will be used while "
"testing particular database, i.e. if you have a list of 3 databases in "
"``DATABASE`` for each item/index respective item from this array will be "
"used (so for first item ``derby`` from ``DATABASES``, first item from "
"``IPS`` will be used as a server IP to which connection will be made."
msgstr ""

#: ../../Running_TTS-NG.rst:97
msgid ""
"``server_timeout=15`` - a timeout in seconds used to delay subsequent "
"actions/tasks (for example to allow server proper startup)"
msgstr ""

#: ../../Running_TTS-NG.rst:99
msgid ""
"``server_dir=\"../tigase-server/server\"`` - server directory which will "
"be used to reload database (if enabled) and start the server (if enabled)"
msgstr ""

#: ../../Running_TTS-NG.rst:101
msgid ""
"``tigase_distribution_url=\"http://build.tigase.org/nightlies/dists/latest"
"/tigase-server-dist-max.tar.gz\"`` - link which will be used to download "
"latest release of Tigase XMPP Server"
msgstr ""

#: ../../Running_TTS-NG.rst:103
msgid ""
"memory configuration for normal tests: ``MS_MEM=100`` and ``MX_MEM=1000``"
" (minimum and maximum JVM heap size respectively) and *low memory tests*:"
" ``SMALL_MS_MEM=10``, ``SMALL_MX_MEM=50`` (minimum and maximum JVM heap "
"size respectively)"
msgstr ""

#: ../../Running_TTS-NG.rst:105
msgid ""
"``ROOT_DIR=./files/`` - a root directory where tests results will be "
"stored and where summary page will be placed (in not disabled)"
msgstr ""

#: ../../index.rst:4
msgid "Tigase TTS-NG - Version 1.1.0"
msgstr ""

#~ msgid ""
#~ "``getDomain()`` - returns random domain "
#~ "from the list of available domains "
#~ "from the list of available domains "
#~ "(see `??? <#test-configuration>`__)"
#~ msgstr ""

#~ msgid ""
#~ "``getDomain(int i)`` - returns i-th "
#~ "domain from the list of available "
#~ "domains from the list of available "
#~ "domains (see `??? <#test-configuration>`__)"
#~ msgstr ""

#~ msgid ""
#~ "``getInstanceHostname()`` - returns random "
#~ "machine hostname from the list of "
#~ "available hostnames from the list of "
#~ "available domains (see `??? <#test-"
#~ "configuration>`__)"
#~ msgstr ""

#~ msgid ""
#~ "``getInstanceHostnames()`` - returns i-th "
#~ "machine hostname from the list of "
#~ "available hostnames from the list of "
#~ "available domains (see `??? <#test-"
#~ "configuration>`__)"
#~ msgstr ""

#~ msgid ""
#~ "``getBoshURI()`` - returns BOSH URI "
#~ "based on configuration in `??? "
#~ "<#test-configuration>`__"
#~ msgstr ""

#~ msgid ""
#~ "``getWebSocketURI()`` - returns WebSocket URI"
#~ " based on configuration in `??? "
#~ "<#test-configuration>`__"
#~ msgstr ""

#~ msgid ""
#~ "As described in `??? <#Test-"
#~ "NG_configuration>`__, each test case must "
#~ "be included in Test Suite configuration."
#~ msgstr ""

#~ msgid ""
#~ "include created xml file in the "
#~ "Test Suite (see `??? <#Test-"
#~ "NG_configuration>`__)"
#~ msgstr ""

#~ msgid ""
#~ "This will run particular test(s) using"
#~ " server details (details about server "
#~ "configuration are described in `??? "
#~ "<#TTS-NG_Configuration>`__). It’s possible to "
#~ "override any of the server configuration"
#~ " options from command line by simply"
#~ " appending ``-D<property_name>=<property_value>`` to"
#~ " the above options."
#~ msgstr ""

#~ msgid ""
#~ "Majority of those are self-explanatory."
#~ " By default, the script will only "
#~ "rebuild all test cases, run them "
#~ "and then generate Summary page and "
#~ "place the output in the ``files`` "
#~ "subdirectory (if not configured otherwise, "
#~ "see `Test Runner settings <#test-"
#~ "runner-settings>`__)."
#~ msgstr ""

#~ msgid ""
#~ "After ``--all-tests`` and ``--custom "
#~ "<test_case>`` options it’s possible to "
#~ "specify a space-delimited list of "
#~ "databases for which tests should be "
#~ "run (they will match database and "
#~ "server IPs defined in `Test Runner "
#~ "settings <#test-runner-settings>`__)."
#~ msgstr ""

